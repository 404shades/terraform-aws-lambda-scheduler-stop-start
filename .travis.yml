---
dist: xenial   # required for Python >= 3.7
language: python
python:
  - "3.7"

env:
  global:
    - AWS_REGION='eu-west-1'
    - TF_VAR_region=${AWS_REGION}
    - TF_WARN_OUTPUT_ERRORS=1

install:
  # Install the latest version of terraform with ansible and sonar-scanner
  - sudo pip install ansible
  - sudo ansible-galaxy install diodonfrost.terraform && sudo ln -s ~/.ansible/roles/diodonfrost.terraform ~/.ansible/roles/ansible-role-terraform
  - sudo ansible-galaxy install diodonfrost.sonar_scanner && sudo ln -s ~/.ansible/roles/diodonfrost.sonar_scanner ~/.ansible/roles/ansible-role-sonar-scanner
  - sudo ansible-pull -U https://github.com/diodonfrost/ansible-role-terraform tests/test.yml
  - sudo ansible-pull -U https://github.com/diodonfrost/ansible-role-sonar-scanner tests/test.yml -e "sonar_scanner_version=3.3.0.1492"

before_script:
  - terraform -version

script:
  # Download Terraform requirements
  - terraform init

  # Rewrites config files to canonical format
  - terraform fmt -check=true

  # Test Terraform module
  - >
    terraform validate \
      -var "region=${AWS_REGION}" \
      -var "name=stop-aws-resources" \
      -var "cloudwatch_schedule_expression=cron(0 22 ? * MON-FRI *)" \
      -var "schedule_action=stop" \
      -var "ec2_schedule=true" \
      -var "rds_schedule=true" \
      -var "autoscaling_schedule=true"

  # Test Terraform fixture example
  - cd examples/test_fixture
  - terraform init
#  - terraform fmt -check=true
  - terraform validate
  - terraform -v

after_success:
  # Run sonar-scanner (https://sonarcloud.io/dashboard?id=diodonfrost_terraform-aws-lambda-scheduler-stop-start)
  - cd ../..
  - >
    sonar-scanner \
      -Dsonar.projectKey=diodonfrost_terraform-aws-lambda-scheduler-stop-start \
      -Dsonar.organization=diodonfrost-github \
      -Dsonar.sources=. \
      -Dsonar.host.url=https://sonarcloud.io \
      -Dsonar.login=${SONAR_TOKEN}
